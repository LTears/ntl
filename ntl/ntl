#pragma once

#define NTL_TAG 'LTN '

namespace ntl {

    template<typename T>
    struct remove_reference { using type = T; };

    template<typename T>
    struct remove_reference<T&> { using type = T; };

    template<typename T>
    struct remove_reference<T&&> { using type = T; };

    template<typename T>
    typename remove_reference<T>::type&& move(T &&arg) {
        return static_cast<typename remove_reference<T>::type&&>(arg);
    }

    template<typename T>
    void swap(T &a, T &b) {
        T t = move(a);
        a = move(b);
        b = move(t);
    }

}
