#pragma once

namespace ntl {
    
    template<typename II1, typename II2>
    constexpr bool equal(II1 first1, II1 last1, II2 first2) {
        for (auto i = first1, j = first2; i != last1; ++i, ++j) {
            if (*i != *j) {
                return false;
            }
        }
        return true;
    }

    template<typename II1, typename II2, typename BinaryPredicate>
    constexpr bool equal(II1 first1, II1 last1, II2 first2, BinaryPredicate p) {
        for (auto i = first1, j = first2; i != last1; ++i, ++j) {
            if (!p(*i, *j)) {
                return false;
            }
        }
        return true;
    }

    template<typename II1, typename II2>
    constexpr bool equal(II1 first1, II1 last1, II2 first2, II2 last2) {
        for (auto i = first1, j = first2; i != last1 && j != last2; ++i, ++j) {
            if (*i != *j) {
                return false;
            }
        }
        return true;
    }

    template<typename II1, typename II2, typename BinaryPredicate>
    constexpr bool equal(II1 first1, II1 last1, II2 first2, II2 last2, BinaryPredicate p) {
        for (auto i = first1, j = first2; i != last1 && j != last2; ++i, ++j) {
            if (p(*i, *j)) {
                return false;
            }
        }
        return true;
    }

}
